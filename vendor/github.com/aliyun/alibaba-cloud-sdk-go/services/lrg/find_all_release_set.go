package lrg

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// FindAllReleaseSet invokes the lrg.FindAllReleaseSet API synchronously
// api document: https://help.aliyun.com/api/lrg/findallreleaseset.html
func (client *Client) FindAllReleaseSet(request *FindAllReleaseSetRequest) (response *FindAllReleaseSetResponse, err error) {
	response = CreateFindAllReleaseSetResponse()
	err = client.DoAction(request, response)
	return
}

// FindAllReleaseSetWithChan invokes the lrg.FindAllReleaseSet API asynchronously
// api document: https://help.aliyun.com/api/lrg/findallreleaseset.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) FindAllReleaseSetWithChan(request *FindAllReleaseSetRequest) (<-chan *FindAllReleaseSetResponse, <-chan error) {
	responseChan := make(chan *FindAllReleaseSetResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.FindAllReleaseSet(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// FindAllReleaseSetWithCallback invokes the lrg.FindAllReleaseSet API asynchronously
// api document: https://help.aliyun.com/api/lrg/findallreleaseset.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) FindAllReleaseSetWithCallback(request *FindAllReleaseSetRequest, callback func(response *FindAllReleaseSetResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *FindAllReleaseSetResponse
		var err error
		defer close(result)
		response, err = client.FindAllReleaseSet(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// FindAllReleaseSetRequest is the request struct for api FindAllReleaseSet
type FindAllReleaseSetRequest struct {
	*requests.RoaRequest
}

// FindAllReleaseSetResponse is the response struct for api FindAllReleaseSet
type FindAllReleaseSetResponse struct {
	*responses.BaseResponse
	Code    int                      `json:"code" xml:"code"`
	Message string                   `json:"message" xml:"message"`
	Success bool                     `json:"success" xml:"success"`
	Data    []map[string]interface{} `json:"data" xml:"data"`
}

// CreateFindAllReleaseSetRequest creates a request to invoke FindAllReleaseSet API
func CreateFindAllReleaseSetRequest() (request *FindAllReleaseSetRequest) {
	request = &FindAllReleaseSetRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("LRG", "2019-10-10", "FindAllReleaseSet", "/api/v2/release-set", "", "")
	request.Method = requests.GET
	return
}

// CreateFindAllReleaseSetResponse creates a response to parse from FindAllReleaseSet response
func CreateFindAllReleaseSetResponse() (response *FindAllReleaseSetResponse) {
	response = &FindAllReleaseSetResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
