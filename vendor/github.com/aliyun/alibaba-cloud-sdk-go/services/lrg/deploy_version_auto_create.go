package lrg

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

// DeployVersionAutoCreate invokes the lrg.DeployVersionAutoCreate API synchronously
// api document: https://help.aliyun.com/api/lrg/deployversionautocreate.html
func (client *Client) DeployVersionAutoCreate(request *DeployVersionAutoCreateRequest) (response *DeployVersionAutoCreateResponse, err error) {
	response = CreateDeployVersionAutoCreateResponse()
	err = client.DoAction(request, response)
	return
}

// DeployVersionAutoCreateWithChan invokes the lrg.DeployVersionAutoCreate API asynchronously
// api document: https://help.aliyun.com/api/lrg/deployversionautocreate.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DeployVersionAutoCreateWithChan(request *DeployVersionAutoCreateRequest) (<-chan *DeployVersionAutoCreateResponse, <-chan error) {
	responseChan := make(chan *DeployVersionAutoCreateResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.DeployVersionAutoCreate(request)
		if err != nil {
			errChan <- err
		} else {
			responseChan <- response
		}
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

// DeployVersionAutoCreateWithCallback invokes the lrg.DeployVersionAutoCreate API asynchronously
// api document: https://help.aliyun.com/api/lrg/deployversionautocreate.html
// asynchronous document: https://help.aliyun.com/document_detail/66220.html
func (client *Client) DeployVersionAutoCreateWithCallback(request *DeployVersionAutoCreateRequest, callback func(response *DeployVersionAutoCreateResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *DeployVersionAutoCreateResponse
		var err error
		defer close(result)
		response, err = client.DeployVersionAutoCreate(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

// DeployVersionAutoCreateRequest is the request struct for api DeployVersionAutoCreate
type DeployVersionAutoCreateRequest struct {
	*requests.RoaRequest
}

// DeployVersionAutoCreateResponse is the response struct for api DeployVersionAutoCreate
type DeployVersionAutoCreateResponse struct {
	*responses.BaseResponse
	Status    string `json:"status" xml:"status"`
	Details   string `json:"details" xml:"details"`
	Reason    string `json:"reason" xml:"reason"`
	ErrorCode string `json:"errorCode" xml:"errorCode"`
	RequestId string `json:"requestId" xml:"requestId"`
	Data      Data   `json:"data" xml:"data"`
}

// CreateDeployVersionAutoCreateRequest creates a request to invoke DeployVersionAutoCreate API
func CreateDeployVersionAutoCreateRequest() (request *DeployVersionAutoCreateRequest) {
	request = &DeployVersionAutoCreateRequest{
		RoaRequest: &requests.RoaRequest{},
	}
	request.InitWithApiInfo("LRG", "2019-10-10", "DeployVersionAutoCreate", "/api/v2/deployVersionAutoCreate", "", "")
	request.Method = requests.POST
	return
}

// CreateDeployVersionAutoCreateResponse creates a response to parse from DeployVersionAutoCreate response
func CreateDeployVersionAutoCreateResponse() (response *DeployVersionAutoCreateResponse) {
	response = &DeployVersionAutoCreateResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
